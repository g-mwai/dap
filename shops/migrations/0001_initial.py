# Generated by Django 3.2 on 2024-03-14 08:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('identifier', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('body', models.TextField(max_length=500)),
                ('reply_count', models.IntegerField(default=0)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('flagged', models.BooleanField(default=False)),
                ('report_count', models.IntegerField(default=0)),
                ('dislikes', models.ManyToManyField(blank=True, related_name='disliked_reviews', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_reviews', to=settings.AUTH_USER_MODEL)),
                ('review_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='review_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55)),
                ('industry', models.CharField(choices=[('technology', 'Technology'), ('finance', 'Finance'), ('healthcare', 'Healthcare'), ('education', 'Education'), ('retail', 'Retail'), ('beauty & wellness', 'Beauty & Wellness'), ('hospitality', 'Hospitality'), ('professional services', 'Professional Services'), ('real estate', 'Real Estate'), ('art & culture', 'Art & Culture'), ('sports & fitness', 'Sports & Fitness'), ('events & entertainment', 'Events & Entertainment'), ('public service', 'Public Service'), ('blue collar', 'Blue Collar'), ('non profit', 'Non Profit'), ('manufacturing', 'Manufacturing'), ('telecommunications', 'Telecommunications'), ('engineering', 'Engineering'), ('agriculture', 'Agriculture'), ('uncategorized', 'Uncategorized')], default='uncategorized', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('location', models.CharField(max_length=50)),
                ('bio', models.TextField(max_length=150)),
                ('user_tokens', models.IntegerField(default=50)),
                ('is_verified', models.BooleanField(default=False)),
                ('industry', models.CharField(choices=[('technology', 'Technology'), ('finance', 'Finance'), ('healthcare', 'Healthcare'), ('education', 'Education'), ('retail', 'Retail'), ('beauty & wellness', 'Beauty & Wellness'), ('hospitality', 'Hospitality'), ('professional services', 'Professional Services'), ('real estate', 'Real Estate'), ('art & culture', 'Art & Culture'), ('sports & fitness', 'Sports & Fitness'), ('events & entertainment', 'Events & Entertainment'), ('public service', 'Public Service'), ('blue collar', 'Blue Collar'), ('non profit', 'Non Profit'), ('manufacturing', 'Manufacturing'), ('telecommunications', 'Telecommunications'), ('engineering', 'Engineering'), ('agriculture', 'Agriculture'), ('uncategorized', 'Uncategorized')], default='uncategorized', max_length=50)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='cover_image/')),
                ('ext_link', models.URLField(blank=True)),
                ('following', models.ManyToManyField(blank=True, related_name='followers', to='shops.Shop')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_owner', to=settings.AUTH_USER_MODEL)),
                ('services', models.ManyToManyField(blank=True, related_name='topic_tags', to='shops.Service')),
            ],
        ),
        migrations.CreateModel(
            name='ReviewReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(max_length=300)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('flagged', models.BooleanField(default=False)),
                ('reply_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='review_reply_by', to=settings.AUTH_USER_MODEL)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_review_reply', to='shops.review')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ReviewLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_likes', to='shops.review')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_likes_review', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='review',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_shop', to='shops.shop'),
        ),
    ]
